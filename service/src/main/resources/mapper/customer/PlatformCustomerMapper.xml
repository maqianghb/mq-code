<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mq.service.dao.customer.PlatformCustomerMapper">

	<resultMap id="BaseResultMap" type="com.example.mq.service.bean.Customer">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="customer_id" jdbcType="BIGINT" property="customerId" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="city" jdbcType="VARCHAR" property="city" />
		<result column="address" jdbcType="VARCHAR" property="address" />
		<result column="register_time" jdbcType="BIGINT" property="registerTime" />
		<result column="total_cost_amount" jdbcType="INTEGER" property="totalCostAmount" />
		<result column="create_time" jdbcType="BIGINT" property="createTime" />
		<result column="update_time" jdbcType="BIGINT" property="updateTime" />
	</resultMap>


	<sql id="baseColumnList">
		id, customer_id, name, city, address, register_time, total_cost_amount
	</sql>

	<insert id="insert" parameterType="com.example.mq.service.bean.Customer">
		insert ignore into platform_customer (
			customer_id, name, city, address, register_time, total_cost_amount, create_time, update_time
		)
		values (
			#{customerId,jdbcType=BIGINT},
			#{name,jdbcType=VARCHAR},
			#{city,jdbcType=VARCHAR},
			#{address,jdbcType=VARCHAR},
			#{registerTime,jdbcType=BIGINT},
			#{totalCostAmount,jdbcType=INTEGER},
			#{createTime,jdbcType=BIGINT},
			#{updateTime,jdbcType=BIGINT}
		)
	</insert>

	<update id="update" parameterType="com.example.mq.service.bean.Customer">
		update platform_customer
		set customer_id = #{customerId,jdbcType=VARCHAR},
      		name = #{name,jdbcType=VARCHAR},
     		city = #{city,jdbcType=VARCHAR},
     		address = #{address,jdbcType=VARCHAR},
     		register_time = #{registerTime,jdbcType=BIGINT},
     		total_cost_amount = #{totalCostAmount,jdbcType=INTEGER},
			create_time = #{createTime,jdbcType=BIGINT},
			update_time = #{updateTime,jdbcType=BIGINT}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<select id="selectByCustomerId" parameterType="java.lang.Long" resultMap="BaseResultMap">
		select <include refid="baseColumnList" />, create_time, update_time
		from platform_customer
		where customer_id = #{customerId,jdbcType=BIGINT} and del_flag !=1
	</select>

	<select id="selectAll" resultMap="BaseResultMap">
		select <include refid="baseColumnList" />, create_time, update_time
		from platform_customer
		where del_flag !=1
	</select>

	<delete id="deleteByCustomerId" parameterType="java.lang.Long">
		update platform_customer
		set del_flag = 1
		where customer_id = #{customerId,jdbcType=BIGINT}
	</delete>


</mapper>