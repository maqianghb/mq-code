<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mq.core.mapper.customerDO.PlatformCustomerMapper">

	<resultMap id="BaseResultMap" type="com.example.mq.core.domain.customer.model.Customer">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="customer_no" jdbcType="BIGINT" property="customerNo" />
		<result column="customer_name" jdbcType="VARCHAR" property="customerName" />
		<result column="customer_age" jdbcType="INTEGER" property="customerAge"/>
		<result column="customer_type" jdbcType="TINYINT" property="customerType"/>
		<result column="customer_desc" jdbcType="VARCHAR" property="customerDesc"/>
		<result column="top_ten_sellers" jdbcType="VARCHAR" property="topTenSellers"/>
		<result column="total_cost_amount" jdbcType="INTEGER" property="totalCostAmount"/>
		<result column="min_active_time" jdbcType="TIMESTAMP" property="minActiveTime"/>
		<result column="max_active_time" jdbcType="TIMESTAMP" property="maxActiveTime"/>
		<result column="remark" jdbcType="VARCHAR" property="remark"/>
		<result column="deleted" jdbcType="TINYINT" property="deleted"/>
		<result column="md5" jdbcType="VARCHAR" property="md5"/>

		<result column="create_user" jdbcType="VARCHAR" property="createUser"/>
		<result column="update_user" jdbcType="VARCHAR" property="updateUser"/>
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
		<result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
	</resultMap>


	<sql id="Base_Column_List">
		id, customer_no, customer_name, customer_age, customer_type, customer_desc, top_ten_sellers,
		total_cost_amount, min_active_time, max_active_time, remark, deleted, md5,
		create_user, update_user, create_time, update_time
	</sql>

	<select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
		select <include refid="Base_Column_List" />
		from mc_platform_customer
		where id = #{id, jdbcType=BIGINT}
	</select>

	<select id="selectByCustomerNo" parameterType="java.lang.Long" resultMap="BaseResultMap">
		select <include refid="Base_Column_List" />
		from mc_platform_customer
		where customer_no = #{customerNo, jdbcType=BIGINT}
	</select>

	<select id="selectAll" resultMap="BaseResultMap">
		select <include refid="Base_Column_List" />
		from mc_platform_customer
	</select>

	<select id="selectByCondition" parameterType="com.example.mq.service.bean.CustomerQueryCondition"
			resultMap="BaseResultMap">
		<![CDATA[
			 select * from mc_platform_customer where 1 = 1
		]]>
		<if test = "customerNo != null">
			and customer_no = #{customerNo, jdbcType=BIGINT}
		</if>
		<if test = "customerName != null and customerName.length() >0 ">
			and customer_name = #{customerName, jdbcType=VARCHAR}
		</if>
		<if test = "customerAge != null">
			and customer_age = #{customerAge, jdbcType=INTEGER}
		</if>
		<if test = "minCostAmount != null">
			and total_cost_amount &gt;= #{minCostAmount, jdbcType=INTEGER}
		</if>
		<if test = "maxCostAmount != null">
			and total_cost_amount &lt;= #{maxCostAmount, jdbcType=INTEGER}
		</if>
		<if test = "minActiveTime != null">
			and max_active_time &gt; #{minActiveTime, jdbcType=TIMESTAMP}
		</if>
		<if test = "maxActiveTime != null">
			and min_active_time &lt; #{maxActiveTime, jdbcType=TIMESTAMP}
		</if>

	</select>

	<insert id="insert" parameterType="com.example.mq.core.domain.customer.model.Customer"
			useGeneratedKeys="true" keyProperty="id">
		insert ignore into mc_platform_customer (
			customer_no, customer_name, customer_age, customer_type, customer_desc, top_ten_sellers,
			total_cost_amount, min_active_time, max_active_time, remark, deleted, md5, create_user, create_time
		)
		values (
			#{customerNo, jdbcType=BIGINT},
			#{customerName, jdbcType=VARCHAR},
			#{customerAge, jdbcType=INTEGER},
			#{customerType, jdbcType=TINYINT},
			#{customerDesc, jdbcType=VARCHAR},
			#{topTenSellers, jdbcType=VARCHAR},
			#{totalCostAmount, jdbcType=INTEGER},
 			#{minActiveTime, jdbcType=TIMESTAMP},
 			#{maxActiveTime, jdbcType=TIMESTAMP}
			#{remark, jdbcType=VARCHAR},
			#{deleted, jdbcType=TINYINT},
			#{md5, jdbcType=VARCHAR},

			#{createUser, jdbcType=VARCHAR},
			#{createTime, jdbcType=TIMESTAMP}

		)
	</insert>

	<insert id="batchInsert" parameterType="java.util.List">
		insert into mc_platform_customer (
			customer_no, customer_name, customer_age, customer_type, customer_desc, top_ten_sellers,
			total_cost_amount, min_active_time, max_active_time, remark, deleted, md5, create_user, create_time
		)
		values
		<foreach collection="list" item="item" index="index" separator=",">
			(
			#{item.customerNo, jdbcType=BIGINT},
			#{item.customerName, jdbcType=VARCHAR},
			#{item.customerAge, jdbcType=INTEGER},
			#{item.customerType, jdbcType=TINYINT},
			#{item.customerDesc, jdbcType=VARCHAR},
			#{item.topTenSellers, jdbcType=VARCHAR},
			#{item.totalCostAmount, jdbcType=INTEGER},
			#{item.minActiveTime, jdbcType=TIMESTAMP},
			#{item.maxActiveTime, jdbcType=TIMESTAMP}
			#{item.remark, jdbcType=VARCHAR},
			#{item.deleted, jdbcType=TINYINT},
			#{item.md5, jdbcType=VARCHAR},

			#{item.createUser, jdbcType=VARCHAR},
			#{item.createTime, jdbcType=TIMESTAMP}
			)
		</foreach>
	</insert>

	<update id="updateById" parameterType="com.example.mq.core.domain.customer.model.Customer">
		update mc_platform_customer
		set customer_no = #{customerNo, jdbcType=BIGINT},
			customer_name = #{customerName, jdbcType=VARCHAR},
			customer_age = #{customerAge, jdbcType=INTEGER},
			customer_type = #{customerType, jdbcType=TINYINT},
			customer_desc = #{customerDesc, jdbcType=VARCHAR},
			top_ten_sellers = #{topTenSellers, jdbcType=VARCHAR},
			total_cost_amount = #{totalCostAmount, jdbcType=INTEGER},
			min_active_time = #{minActiveTime, jdbcType=TIMESTAMP},
			max_active_time = #{maxActiveTime, jdbcType=TIMESTAMP},
			remark = #{remark, jdbcType=VARCHAR},
			deleted = #{deleted, jdbcType=TINYINT},
			md5 = #{md5, jdbcType=VARCHAR},

			update_user = #{updateUser, jdbcType=VARCHAR},
			update_time = #{updateTime, jdbcType=TIMESTAMP}
		where id = #{id, jdbcType=BIGINT}
	</update>

	<delete id="deleteById" parameterType="java.lang.Long">
		update mc_platform_customer
		set deleted = 1
		where id = #{id, jdbcType=BIGINT}
	</delete>


</mapper>